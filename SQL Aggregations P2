#For each account, determine the average amount of each type of paper they purchased across their orders. 
#Your result should have four columns - one for the account name and one for the average quantity purchased for each of the paper types for each account. 

SELECT a.name, AVG(o.standard_qty), AVG(o.gloss_qty), AVG(o.poster_qty)
FROM orders o
JOIN accounts a
ON o.account_id = a.id
GROUP BY a.name

#For each account, determine the average amount spent per order on each paper type. 
#Your result should have four columns - one for the account name and one for the average amount spent on each paper type.

SELECT a.name, AVG(o.standard_amt_usd) avg_sd, AVG(o.gloss_amt_usd) avg_gloss, AVG(o.poster_amt_usd) avg_poster
FROM orders o JOIN accounts a
ON o.account_id = a.id
GROUP BY a.name

#Determine the number of times a particular channel was used in the web_events table for each sales rep. 
#Your final table should have three columns - the name of the sales rep, the channel, and the number of occurrences. 
#Order your table with the highest number of occurrences first.

SELECT s.name, w.channel, COUNT(w.channel) num_events
FROM accounts a
JOIN web_events w
ON w.account_id = a.id
JOIN sales_reps s
ON a.sales_rep_id = s.id
JOIN region r
ON s.region_id = r.id
GROUP BY s.name, w.channel
ORDER BY num_events DESC;

#Determine the number of times a particular channel was used in the web_events table for each region. 
#Your final table should have three columns - the region name, the channel, and the number of occurrences. 
#Order your table with the highest number of occurrences first.

SELECT r.name, COUNT(*) num_events, w.channel
FROM accounts a
JOIN web_events w
ON w.account_id = a.id
JOIN sales_reps s
ON a.sales_rep_id = s.id
JOIN region r
ON s.region_id = r.id
GROUP BY r.name, w.channel
ORDER BY num_events DESC;

#Which accounts used facebook as a channel to contact customers more than 6 times?

SELECT a.name, a.id, w.channel, COUNT(*) channel_use
FROM accounts a
JOIN web_events w
ON w.account_id = a.id
GROUP BY a.name, a.id, w.channel
HAVING COUNT(*) > 6 AND w.channel = 'facebook'
ORDER BY channel_use DESC;

#In which month of which year did Walmart spend the most on gloss paper in terms of dollars?

SELECT DATE_TRUNC('month', o.occurred_at) AS month, SUM(o.gloss_amt_usd) AS gloss_sales
FROM orders o
JOIN accounts a
ON o.account_id = a.id
WHERE a.name = 'Walmart'
GROUP BY 1
ORDER BY 2 DESC;

#We would like to understand 3 different levels of customers based on the amount associated with their purchases. 
#The top branch includes anyone with a Lifetime Value (total sales of all orders) greater than 200,000 usd. 
#The second branch is between 200,000 and 100,000 usd. The lowest branch is anyone under 100,000 usd. 
#Provide a table that includes the level associated with each account. 
#You should provide the account name, the total sales of all orders for the customer, and the level. 
#Order with the top spending customers listed first.

SELECT a.name, SUM(o.total_amt_usd) total_sales, 
CASE WHEN SUM(o.total_amt_usd) >= 200000 THEN 'Level 1' 
	WHEN SUM(o.total_amt_usd) > 100000 THEN 'Level 2'
    ELSE 'Level 3'
    END AS levels
 FROM accounts a
 JOIN orders o
 ON o.account_id = a.id
 GROUP BY a.name
 ORDER BY 2 DESC;
 
 #We would like to identify top performing sales reps, which are sales reps associated with more than 200 orders. 
 #Create a table with the sales rep name, the total number of orders, and a column with top or not depending on if they have more than 200 orders. 
 #Place the top sales people first in your final table.
 
SELECT COUNT(*) total_orders, s.name,
CASE WHEN COUNT(*) > 200 THEN 'top'
ELSE 'not' END AS sales_reps_performance
FROM orders o
JOIN accounts a
ON o.account_id = a.id
JOIN sales_reps s
ON a.sales_rep_id = s.id
GROUP BY 2
ORDER BY 1 DESC;

#The previous didn't account for the middle, nor the dollar amount associated with the sales. 
#Management decides they want to see these characteristics represented as well. 
#We would like to identify top performing sales reps, which are sales reps associated with more than 200 orders or more than 750000 in total sales. 
#The middle group has any rep with more than 150 orders or 500000 in sales. 
#Create a table with the sales rep name, the total number of orders, total sales across all orders, and a column with top, middle, or low depending on this criteria. 
#Place the top sales people based on dollar amount of sales first in your final table.

SELECT COUNT(*) total_orders, SUM(o.total_amt_usd) total_sales, s.name,
CASE WHEN COUNT(*) > 200 OR SUM(o.total_amt_usd) > 750000 THEN 'top'
WHEN COUNT(*) > 150 OR SUM(o.total_amt_usd) > 500000 THEN 'middle'
ELSE 'low' END AS sales_reps_performance
FROM orders o
JOIN accounts a
ON o.account_id = a.id
JOIN sales_reps s
ON a.sales_rep_id = s.id
GROUP BY 3
ORDER BY 2 DESC;

